on: [push, pull_request]
jobs:
  tests:
    name: ${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.version }}-python-${{ matrix.python-version }}-${{ matrix.castxml-epic }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
            compiler: gcc
            version: "7"
            python-version: 3.5
            castxml: "castxml"
            castxml-epic: 0
            cppstd: "-std=c++98"

          - os: ubuntu-18.04
            compiler: gcc
            version: "7"
            python-version: 3.6
            castxml: "castxml"
            castxml-epic: 0
            cppstd: "-std=c++98"

          - os: ubuntu-18.04
            compiler: gcc
            version: "7"
            python-version: 3.7
            castxml: "castxml"
            castxml-epic: 0
            cppstd: "-std=c++98"

          - os: ubuntu-18.04
            compiler: gcc
            version: "7"
            python-version: 3.8
            castxml: "castxml"
            castxml-epic: 0
            cppstd: "-std=c++98"

          - os: ubuntu-18.04
            compiler: gcc
            version: "7"
            python-version: 3.8
            castxml: "castxml"
            castxml-epic: 1
            cppstd: "-std=c++98"

          - os: ubuntu-18.04
            compiler: gcc
            version: "7"
            python-version: 3.8
            castxml: "castxml"
            castxml-epic: 1
            cppstd: "-std=c++11"

          - os: macos-latest
            compiler: xcode
            version: "default"
            python-version: 3.8
            castxml: "castxml"
            castxml-epic: 0
            cppstd: "-std=c++98"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Setup castxml for Linux
        if: matrix.os == 'ubuntu-18.04' && matrix.castxml == 'castxml'
        run: |
          wget -q -O - https://data.kitware.com/api/v1/file/hashsum/sha512/bdbb67a10c5f8d1b738cd19cb074f409d4803e8077cb8c1072ef4eaf738fa871a73643f9c8282d58cae28d188df842c82ad6620b6d590b0396a0172a27438dce/download | tar zxf - -C ~/
      - name: Setup castxml for Mac
        if: matrix.os == 'macos-latest'
        run: |
          wget -q -O - https://data.kitware.com/api/v1/file/hashsum/sha512/5d937e938f7b882a3a3e7941e68f8312d0898aaf2082e00003dd362b1ba70b98b0a08706a1be28e71652a6a0f1e66f89768b5eaa20e5a100592d5b3deefec3f0/download | tar zxf - -C ~/
      - name: Setup castxml config
        if: matrix.compiler == 'gcc' && matrix.version == '7'
        run: mv unittests/configs/gcc7.cfg unittests/xml_generator.cfg;
      - name: Install Python lib and test libs
        run: |
          pip install .[test]
      - name: Run tests
        run: |
          export PATH=~/castxml/bin:$PATH
          coverage run -m unittests.test_all
          coverage combine
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
